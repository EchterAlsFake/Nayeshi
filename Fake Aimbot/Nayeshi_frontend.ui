<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Widget</class>
 <widget class="QWidget" name="Widget">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>800</width>
    <height>250</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Widget</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QWidget {
color: white;
background-color: rgb(60, 60, 60);
border: none;
}

QLineEdit {
    border: 2px solid #757575;
    border-radius: 12px;
    padding: 0 8px;
    background: rgb(94, 92, 100); 
    color: #FFFFFF; 
    font-size: 16px;
    height: 20px;
}

QLineEdit:focus {
    border-color: rgb(107, 0, 255)
}

QLineEdit:disabled {
    background: #444444;  
    color: #aaaaaa; 
    border-color: #aaaaaa;
}

QPushButton {
        background-color: #5a2a82;
        color: #ffffff; 
        border: none;
        border-radius: 10px;
        padding: 5px 20px; 
        font-size: 12px;
        outline: none;
    }
    
    QPushButton:hover {
        background-color: #7b3ca3; 
    }

    QPushButton:pressed {
        background-color: #481f61; 
    }

    QPushButton:disabled {
        background-color: #3f1d4d; 
        color: #8a7b9a; 
    }


QProgressBar {
	color: rgb(255, 153, 0);
    border: 2px solid #5a2a82;
    border-radius: 5px;
    text-align: center;
    background-color: rgb(74, 74, 74);
    color: #ffffff;  /* Adding text color for better visibility */
}

QProgressBar::chunk {
    background-color: rgb(0, 255, 224);
    width: 10px; /* Adjust this to change the width of the 'chunk' */
}

QRadioButton {
	color: rgb(255,255,255)}

QRadioButton::indicator::unchecked {
	border: 1px solid white;
	border-radius: 5px;
}


QRadioButton::indicator:checked {
    border : 4px solid;
	border-color: black;
	border-radius: 6px;
	background-color: rgb(0, 255, 183);

}

QSlider::groove:horizontal {
    border: 1px solid #5a2a82;
    height: 8px;
    background: #e0e0e0;
    margin: 0px;
    border-radius: 4px;
}

QSlider::handle:horizontal {
    background: #5a2a82;
    border: 1px solid #5a2a82;
    width: 18px;
    margin: -6px 0;
    border-radius: 9px;
}

QSlider::add-page:horizontal {
    background: #e0e0e0;
}

QSlider::sub-page:horizontal {
    background: #5a2a82;
}

QTreeWidget {
    background-color: rgb(94, 94, 94);
    color: white;
}

QTreeWidget QHeaderView::section {
    background-color: rgb(94, 94, 94);
    color: black; 
    border: 1px solid #5a2a82;
    padding: 4px;
}

QGroupBox {
        border: 0px;
        margin-top: 1ex; /* Adjust as needed */
    }
    QGroupBox::title {
        subcontrol-origin: margin;
        subcontrol-position: top center;
        padding: 0 3px;
    }</string>
  </property>
  <layout class="QGridLayout" name="gridLayout">
   <item row="0" column="0">
    <layout class="QVBoxLayout" name="verticalLayout">
     <item>
      <widget class="QTextBrowser" name="textBrowser">
       <property name="html">
        <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;meta charset=&quot;utf-8&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
hr { height: 1px; border-width: 0; }
li.unchecked::marker { content: &quot;\2610&quot;; }
li.checked::marker { content: &quot;\2612&quot;; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Segoe UI'; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:20pt;&quot;&gt;		Information:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-family:'JetBrains Mono','monospace'; color:#ffffff;&quot;&gt;The Aimbot will now start generating / updating the pointers for&lt;br /&gt;Fortnite, CS:GO, Rainbow Six Siege, Valorant and possibly other FPS games.&lt;br /&gt;This only needs to be done once, and can then be re-used. How long it takes depends&lt;br /&gt;on your system resources. Generating the pointers takes a lot of CPU and DISK usage.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;DO NOT RUN IT ON SPLITGATE! Splitgate can detect the Aimbot. All other games didn't.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
     </item>
    </layout>
   </item>
   <item row="1" column="0">
    <layout class="QVBoxLayout" name="verticalLayout_2">
     <item>
      <widget class="QPushButton" name="pushButton">
       <property name="text">
        <string>Start</string>
       </property>
      </widget>
     </item>
    </layout>
   </item>
   <item row="2" column="0">
    <widget class="QProgressBar" name="progressBar">
     <property name="styleSheet">
      <string notr="true"/>
     </property>
     <property name="value">
      <number>0</number>
     </property>
    </widget>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections/>
</ui>
